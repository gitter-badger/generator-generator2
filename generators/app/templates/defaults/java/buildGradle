buildscript {
    repositories {
		maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
    }
    dependencies {
        classpath 'net.nemerosa:versioning:1.5.0'
		classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.0.1'
		classpath 'org.standardout:gradle-versioneye-plugin:1.4.0'
		classpath 'net.saliman:gradle-cobertura-plugin:2.3.2'
    }
}

repositories {
    jcenter()
}

apply plugin: 'java-base'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'wrapper'
apply plugin: 'net.saliman.cobertura'
apply plugin: 'net.nemerosa.versioning'
apply plugin: 'org.sonarqube'
apply plugin: 'org.standardout.versioneye'

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')

	//Yeoman:libs
    compile 'com.offbytwo:docopt:0.6.0.20150202'
    compile 'org.projectlombok:lombok:1.16.6'
    compile 'org.slf4j:slf4j-simple:1.7.16'
    compile 'commons-validator:commons-validator:1.5.0'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.+'
    testCompile 'org.powermock:powermock-module-junit4:1.6.5'
    testCompile 'org.powermock:powermock-api-mockito:1.6.5'
}

sourceSets {
    main {
        resources.srcDirs = [
			"src/main/java",
			"src/main/resources"
        ]
	}
}

mainClassName = 'app.Main'
group = '<%=java.groupId%>'
sourceCompatibility = 1.8
version = versioning.info.full
description = '<%=app.description%>'

ant.propertyfile(file: "src/main/resources/config/build.properties") {
    entry(key: "date", value: new Date().format('dd.MM.yyyy'))
    entry(key: "version", value: version)
}

cobertura {
	coverageFormats = ['html', 'xml']
}

run {
	if (project.hasProperty('ENV')) {
		systemProperties['ENV'] = getProperty('ENV')
	} else {
		systemProperties['ENV'] = ENV
	}
	println "ENV: ${systemProperties['ENV']}"
}
